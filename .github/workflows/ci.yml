name: Continuous Integration

on: pull_request

jobs:
  lint-and-test:
    name: Lint Code adn Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: ESLint Check
        run: pnpm eslint .

      - name: Prettier Check
        run: pnpm prettier --check --ignore-unknown .

      - name: Create .env file
        uses: ozaytsev86/create-env-file-action@v1
        with:
          ENV_NG_APP_API_ENDPOINT: ${{ vars.API_ENDPOINT }}

      - name: Unit Test
        run: pnpm test:cli --no-watch

  deploy-preview:
    name: Deploy Preview to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Create .env file
        uses: ozaytsev86/create-env-file-action@v1
        with:
          ENV_NG_APP_API_ENDPOINT: ${{ vars.API_ENDPOINT }}

      - name: Build
        run: pnpm build

      - uses: bhowell2/github-substring-action@v1.0.0
        id: sha
        with:
          value: ${{ github.sha }}
          length_from_start: 7

      - name: Create Cloudflare Pages Project
        run: |
          curl --request POST \
            --url https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer ${{ secrets.CLOUDFLARE_PAGES_DEPLOY_TOKEN }}' \
            --data '{
              "name": "charkchalk-pr-${{ github.event.number }}",
              "production_branch": "main"
            }'

      - name: Deploy Preview to Cloudflare Pages
        id: deployment
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_PAGES_DEPLOY_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: charkchalk-pr-${{ github.event.number }}
          directory: dist/charkchalk-frontend
          branch: ${{ steps.sha.outputs.substring }}

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Preview ${{ steps.sha.outputs.substring }} at: ${{ steps.deployment.outputs.url }}
